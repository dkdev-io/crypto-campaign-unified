#!/bin/bash

# Agent Checkin Script - Mandatory Guard Rails Verification
# Prevents agents from working outside their scope and directory

set -e

echo "üö® AGENT CHECKIN - MANDATORY GUARDRAILS VERIFICATION üö®"
echo "=============================================="

# Get the current working directory
CURRENT_DIR=$(pwd)
PROJECT_DIR=$(basename "$CURRENT_DIR")

echo "üìç Current Directory: $CURRENT_DIR"
echo "üìÅ Project Name: $PROJECT_DIR"
echo

# Check for CLAUDE.md in current directory
if [ -f "CLAUDE.md" ]; then
    echo "‚úÖ Found project-specific CLAUDE.md guardrails"
    echo
    echo "üìã PROJECT GUARDRAILS:"
    echo "======================"
    head -20 CLAUDE.md
    echo
    echo "... (see full file for complete guardrails)"
    echo
else
    echo "‚ùå No CLAUDE.md found in current directory"
    echo "‚ö†Ô∏è  Using general guardrails only"
    echo
fi

# Supabase capabilities section
echo "üîÑ SUPABASE CAPABILITIES & RESTRICTIONS:"
echo "========================================"
echo
echo "AGENTS CAN:"
echo "- Start/stop Supabase: 'npm run supabase:start' or 'supabase start'"
echo "- Push schema changes: 'supabase db push'"
echo "- Reset database: 'npm run db:reset' or 'supabase db reset'"
echo "- Generate types: 'supabase gen types typescript'"
echo "- View logs: 'supabase logs'"
echo
echo "AGENTS CANNOT:"
echo "- Modify production databases directly"
echo "- Access production secrets or credentials"
echo "- Perform destructive operations without user confirmation"
echo "- Add mock/sample data (see NO MOCK DATA POLICY)"
echo

# Port configuration check
echo "üåê PORT CONFIGURATION:"
echo "====================="
if [ -f "PORT_CONFIGURATION.md" ] || [ -f "../PORT_CONFIGURATION.md" ]; then
    echo "‚úÖ Port configuration file found"
    echo "üìå This project uses port 3000 (http://localhost:3000)"
    echo "üö® NEVER use ports 3001, 3002, 5173 - they are reserved"
else
    echo "‚ö†Ô∏è  No specific port configuration found"
    echo "üîß Default assumption: Check for existing dev server first"
fi
echo

# File management rules
echo "üìÅ FILE MANAGEMENT RESTRICTIONS:"
echo "================================"
echo "‚úÖ AGENTS CAN work in:"
echo "   - $CURRENT_DIR (current project directory)"
echo "   - $CURRENT_DIR/src/"
echo "   - $CURRENT_DIR/components/"
echo "   - $CURRENT_DIR/tests/"
echo "   - $CURRENT_DIR/docs/"
echo
echo "‚ùå AGENTS CANNOT:"
echo "   - Modify files in /Users/Danallovertheplace/ (root)"
echo "   - Work in other project directories"
echo "   - Save temporary files to root folder"
echo "   - Create files outside project scope"
echo

# Application summary
echo "üèóÔ∏è APPLICATION SUMMARY:"
echo "======================"
if [ -f "package.json" ]; then
    echo "üì¶ Project Type: $(grep -o '"name":\s*"[^"]*"' package.json | cut -d'"' -f4 2>/dev/null || echo 'Unknown')"
    
    # Get framework information
    if grep -q '"react"' package.json 2>/dev/null; then
        echo "‚öõÔ∏è  Framework: React"
    fi
    if grep -q '"next"' package.json 2>/dev/null; then
        echo "‚ñ≤ Framework: Next.js"
    fi
    if grep -q '"@supabase"' package.json 2>/dev/null; then
        echo "üóÑÔ∏è  Database: Supabase"
    fi
    if grep -q '"typescript"' package.json 2>/dev/null; then
        echo "üìò Language: TypeScript"
    fi
    
    echo "üèÉ Available Commands:"
    grep -A 10 '"scripts"' package.json | grep -E '^\s*"[^"]+":' | sed 's/^[[:space:]]*/   - npm run /' | sed 's/"://' | sed 's/",*//' | sed 's/"//g' || echo "   - No scripts found"
else
    echo "‚ö†Ô∏è  No package.json found - not a Node.js project"
fi

echo
echo "üéØ AGENT CONFIRMATION REQUIRED:"
echo "==============================="
echo "Before proceeding, confirm you understand:"
echo "1. ‚úÖ I will ONLY work in: $CURRENT_DIR"
echo "2. ‚úÖ I will NEVER add mock/sample data"
echo "3. ‚úÖ I will use port 3000 for local development"
echo "4. ‚úÖ I will ask user before destructive operations"
echo "5. ‚úÖ I will follow project-specific CLAUDE.md guardrails"
echo
echo "Type 'CONFIRMED' to proceed with your work in this project."
echo "=============================================="